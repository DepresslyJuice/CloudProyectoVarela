// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VarelaProyectoCloud.Data;

#nullable disable

namespace VarelaProyectoCloud.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250521150124_MigrationSqlServer")]
    partial class MigrationSqlServer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VarelaProyectoCloud.Models.Asistencia", b =>
                {
                    b.Property<int>("asistencia_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("asistencia_id"));

                    b.Property<bool>("asistio")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("inscripcion_id")
                        .HasColumnType("int");

                    b.Property<int>("sesion_id")
                        .HasColumnType("int");

                    b.HasKey("asistencia_id");

                    b.HasIndex("inscripcion_id");

                    b.HasIndex("sesion_id");

                    b.ToTable("asistencias");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Certificado", b =>
                {
                    b.Property<int>("certificado_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("certificado_id"));

                    b.Property<string>("codigo_verificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_emision")
                        .HasColumnType("datetime2");

                    b.Property<int>("inscripcion_id")
                        .HasColumnType("int");

                    b.Property<string>("url_certificado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("certificado_id");

                    b.HasIndex("inscripcion_id");

                    b.ToTable("certificados");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Espacio", b =>
                {
                    b.Property<int>("espacio_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("espacio_id"));

                    b.Property<int>("capacidad")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("espacio_id");

                    b.ToTable("espacios");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Evento", b =>
                {
                    b.Property<int>("evento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("evento_id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo_evento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("evento_id");

                    b.ToTable("eventos");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Inscripcion", b =>
                {
                    b.Property<int>("inscripcion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("inscripcion_id"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("evento_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_inscripcion")
                        .HasColumnType("datetime2");

                    b.Property<int>("participante_id")
                        .HasColumnType("int");

                    b.Property<int>("tipo_inscripcion_id")
                        .HasColumnType("int");

                    b.HasKey("inscripcion_id");

                    b.HasIndex("evento_id");

                    b.HasIndex("participante_id");

                    b.HasIndex("tipo_inscripcion_id");

                    b.ToTable("inscripciones");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Participante", b =>
                {
                    b.Property<int>("participante_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("participante_id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("participante_id");

                    b.ToTable("participantes");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Ponente", b =>
                {
                    b.Property<int>("ponente_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ponente_id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ponente_id");

                    b.ToTable("ponentes");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.PonenteSesion", b =>
                {
                    b.Property<int>("ponente_id")
                        .HasColumnType("int");

                    b.Property<int>("sesion_id")
                        .HasColumnType("int");

                    b.HasKey("ponente_id", "sesion_id");

                    b.HasIndex("sesion_id");

                    b.ToTable("ponentes_sesiones");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Sesion", b =>
                {
                    b.Property<int>("sesion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sesion_id"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("espacio_id")
                        .HasColumnType("int");

                    b.Property<int>("evento_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("hora_fin")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("hora_inicio")
                        .HasColumnType("time");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("sesion_id");

                    b.HasIndex("espacio_id");

                    b.HasIndex("evento_id");

                    b.ToTable("sesiones");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.TipoInscripcion", b =>
                {
                    b.Property<int>("tipo_inscripcion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tipo_inscripcion_id"));

                    b.Property<double>("costo")
                        .HasColumnType("float");

                    b.Property<string>("detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipo_inscripcion_id");

                    b.ToTable("tipo_inscripcion");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Services.Pago", b =>
                {
                    b.Property<int>("pago_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pago_id"));

                    b.Property<DateTime>("fecha_pago")
                        .HasColumnType("datetime2");

                    b.Property<int>("inscripcion_id")
                        .HasColumnType("int");

                    b.Property<string>("metodo_pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("monto")
                        .HasColumnType("float");

                    b.HasKey("pago_id");

                    b.HasIndex("inscripcion_id");

                    b.ToTable("pagos");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Asistencia", b =>
                {
                    b.HasOne("VarelaProyectoCloud.Models.Inscripcion", "inscripcion")
                        .WithMany()
                        .HasForeignKey("inscripcion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarelaProyectoCloud.Models.Sesion", "sesion")
                        .WithMany()
                        .HasForeignKey("sesion_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("inscripcion");

                    b.Navigation("sesion");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Certificado", b =>
                {
                    b.HasOne("VarelaProyectoCloud.Models.Inscripcion", "inscripcion")
                        .WithMany()
                        .HasForeignKey("inscripcion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("inscripcion");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Inscripcion", b =>
                {
                    b.HasOne("VarelaProyectoCloud.Models.Evento", "evento")
                        .WithMany()
                        .HasForeignKey("evento_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarelaProyectoCloud.Models.Participante", "participante")
                        .WithMany()
                        .HasForeignKey("participante_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarelaProyectoCloud.Models.TipoInscripcion", "tipo_inscripcion")
                        .WithMany()
                        .HasForeignKey("tipo_inscripcion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evento");

                    b.Navigation("participante");

                    b.Navigation("tipo_inscripcion");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.PonenteSesion", b =>
                {
                    b.HasOne("VarelaProyectoCloud.Models.Ponente", "ponente")
                        .WithMany("ponente_sesiones")
                        .HasForeignKey("ponente_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarelaProyectoCloud.Models.Sesion", "sesion")
                        .WithMany("ponente_sesiones")
                        .HasForeignKey("sesion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ponente");

                    b.Navigation("sesion");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Sesion", b =>
                {
                    b.HasOne("VarelaProyectoCloud.Models.Espacio", "espacio")
                        .WithMany()
                        .HasForeignKey("espacio_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VarelaProyectoCloud.Models.Evento", "evento")
                        .WithMany()
                        .HasForeignKey("evento_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("espacio");

                    b.Navigation("evento");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Services.Pago", b =>
                {
                    b.HasOne("VarelaProyectoCloud.Models.Inscripcion", "inscripcion")
                        .WithMany()
                        .HasForeignKey("inscripcion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("inscripcion");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Ponente", b =>
                {
                    b.Navigation("ponente_sesiones");
                });

            modelBuilder.Entity("VarelaProyectoCloud.Models.Sesion", b =>
                {
                    b.Navigation("ponente_sesiones");
                });
#pragma warning restore 612, 618
        }
    }
}
